{"version":3,"file":"static/js/744.6b6c7b66.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter.filterValue;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    if (filterValue !== '') {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filterValue.toLowerCase())\n      );\n    }\n    return contacts;\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const ContactFormStyled = styled.form`\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  padding: 20px;\n  border: 2px solid cadetblue;\n  border-radius: 5px;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ContactInput = styled.input`\n  height: 20px;\n  padding-left: 10px;\n  &:focus {\n    outline-color: cadetblue;\n  }\n`;\n\nexport const ContactLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactButton = styled.button`\n  padding-left: 10px;\n  padding-right: 10px;\n  height: 25px;\n  border-radius: 5px;\n  border-width: 1px;\n  border-color: darkgray;\n  &:hover {\n    background-color: cadetblue;\n    border-color: cadetblue;\n    cursor: pointer;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  padding: 20px 20px 20px 20px;\n  border: 2px solid cadetblue;\n  border-radius: 5px;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterValue } from 'redux/selectors';\nimport { setFilterValue } from 'redux/filterSlice';\nimport { ContactInput } from 'components/ContactForm/ContactForm.styled';\nimport { FilterLabel } from 'components/Filter/Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n\n  const handleInput = filter => {\n    dispatch(setFilterValue(filter.target.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contact by name:\n      <ContactInput\n        type=\"name\"\n        placeholder=\"Enter searching name...\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={handleInput}\n      />\n    </FilterLabel>\n  );\n};\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { ContactButton } from 'components/ContactForm/ContactForm.styled';\n\nexport const ContactItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n\n  &:hover {\n    text-decoration: underline;\n    text-decoration-color: cadetblue;\n  }\n\n  & svg {\n    color: cadetblue;\n    margin-right: 10px;\n  }\n`;\n\nexport const ContactIcon = styled.svg`\n  color: cadetblue;\n  margin-right: 10px;\n`;\n\nexport const ContactName = styled.p`\n  margin-right: auto;\n`;\n\nexport const DeleteButton = styled(ContactButton)`\n  ${props => css`\n    height: 20px;\n  `}\n`;\n","import { useDispatch } from 'react-redux';\nimport { MdPhone } from 'react-icons/md';\nimport { DeleteButton } from 'components/ContactItem/ContactItem.styled';\n\nimport {\n  ContactItemStyled,\n  ContactName,\n} from 'components/ContactItem/ContactItem.styled';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = evt => {\n    dispatch(deleteContact(evt.target.name));\n  };\n\n  return (\n    <ContactItemStyled key={id}>\n      <MdPhone />\n      <ContactName>\n        {name} : {number}\n      </ContactName>\n      <DeleteButton type=\"button\" name={id} onClick={onDeleteContact}>\n        Delete\n      </DeleteButton>\n    </ContactItemStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContacListStyled = styled.ul`\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 2px solid cadetblue;\n  border-radius: 5px;\n  width: 350px;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  // selectContacts,\n  // selectFilterValue,\n  selectVisibleContacts,\n} from '../../redux/selectors';\n// import { persistStore } from 'redux-persist';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { ContacListStyled } from './ContactList.styled';\n\n// const getVisibleContacts = (contacts, filterValue) => {\n//   if (filterValue !== '') {\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filterValue.toLowerCase())\n//     );\n//   }\n//   return contacts;\n// };\n\nexport const ContactList = () => {\n  // const contacts = useSelector(selectContacts);\n  // const filterValue = useSelector(selectFilterValue);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  // console.log(contacts, filterValue, visibleContacts);\n  console.log(visibleContacts);\n\n  return (\n    <ContacListStyled>\n      {visibleContacts ? (\n        visibleContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} id={id} name={name} number={number} />\n        ))\n      ) : (\n        <p>nich ne vudno!</p>\n      )}\n    </ContacListStyled>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from '../../redux/selectors';\nimport { Notify } from 'notiflix';\n\nimport {\n  ContactFormStyled,\n  ContactInput,\n  ContactLabel,\n  ContactButton,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const form = evt.target;\n    const nameValue = form.elements.name.value;\n    const numberValue = form.elements.number.value;\n\n    const filteredContacts = contacts.filter(\n      contact => contact.name === nameValue\n    );\n\n    filteredContacts.length > 0\n      ? Notify.info(`${nameValue} is allready in contacts`)\n      : dispatch(addContact({ name: nameValue, number: numberValue }));\n    form.reset();\n  }\n\n  return (\n    <ContactFormStyled onSubmit={handleSubmit}>\n      <ContactLabel>\n        Name\n        <ContactInput\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters (less then 25), apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          maxlength=\"25\"\n          required\n        />\n      </ContactLabel>\n      <ContactLabel>\n        Number\n        <ContactInput\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter contact phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactLabel>\n      <ContactButton type=\"submit\">Add contact</ContactButton>\n    </ContactFormStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Phonebook = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  //   background-color: lightblue;\n`;\n\nexport const TitlePhonebook = styled.h1`\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Phonebook, ContactTitle, TitlePhonebook } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Phonebook>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <ContactForm />\n      {isLoading && (\n        //   !error &&\n        <b>Request in progress...</b>\n      )}\n      <ContactTitle>Contacts</ContactTitle>\n      <Filter />\n      <ContactList />\n    </Phonebook>\n  );\n}\n\n//  return (\n//     <Phonebook>\n//       <TitlePhonebook>Phonebook</TitlePhonebook>\n//       <ContactForm />\n//       {isLoading && !error && <b>Request in progress...</b>}\n//       <ContactTitle>Contacts</ContactTitle>\n//       <Filter />\n//       <ContactList />\n//     </Phonebook>\n//   );\n//  <>\n\n//       <Helmet>\n//         <title>Your Contacts</title>\n//       </Helmet>\n//       <TaskEditor />\n//       <div>{isLoading && 'Request in progress...'}</div>\n//       <TaskList />\n//     </>\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilterValue","filter","filterValue","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactFormStyled","styled","ContactInput","ContactLabel","ContactButton","FilterLabel","Filter","dispatch","useDispatch","useSelector","type","placeholder","value","onChange","setFilterValue","target","ContactItemStyled","ContactName","DeleteButton","props","css","ContactItem","id","number","onClick","evt","deleteContact","ContacListStyled","ContactList","visibleContacts","console","log","map","ContactForm","onSubmit","preventDefault","form","nameValue","elements","numberValue","length","Notify","addContact","reset","pattern","title","maxlength","required","Phonebook","TitlePhonebook","ContactTitle","Contacts","useEffect","fetchContacts"],"sourceRoot":""}